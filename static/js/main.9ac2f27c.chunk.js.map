{"version":3,"sources":["components/FeedbackStatistics/Feedback.module.css","components/FeedbackStatistics/Feedback/Section.js","components/FeedbackStatistics/Feedback/FeedbackOptions.js","components/FeedbackStatistics/Feedback/Statistick.js","components/FeedbackStatistics/Feedback/Notification.js","App.js","index.js"],"names":["module","exports","Section","children","FeedbackOptions","onAddReview","ButtonGroup","variant","color","aria-label","Button","name","onClick","e","currentTarget","Statistics","state","good","neutral","bad","total","percentage","className","styles","baseShell","Notification","massage","App","addReview","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","container","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,UAAY,8B,4ICGvDC,EAFC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,8BAAMA,K,gBCsBzBC,EApBS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzB,OACE,eAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,aAAW,iCAHb,UAKE,cAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,QAAS,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,cAAcH,OAA9D,kBAGA,cAACD,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAAS,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,cAAcH,OAAjE,qBAGA,cAACD,EAAA,EAAD,CAAQC,KAAK,MAAMC,QAAS,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,cAAcH,OAA7D,qBCSSI,EAtBI,SAAC,GAAD,QAAGC,MAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,IAAOC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,WAAzC,OACjB,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,4CACA,uCACQ,+BAAOP,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,uCAEE,+BAAOC,OAET,oDACqB,iCAAOC,EAAP,cCjBVI,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,KC8D5BC,E,4MArDbX,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,UAAY,SAAAjB,GACV,EAAKkB,UAAS,SAAAC,GAAS,sBACpBnB,EAAOmB,EAAUnB,GAAQ,O,EAI9BoB,mBAAqB,WACnB,MAA+B,EAAKf,MAEpC,OAFA,EAAQC,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBa,gCAAkC,WAChC,IAAMZ,EAAQ,EAAKW,qBACbV,EAAaY,KAAKC,MAAyB,IAAlB,EAAKlB,MAAMC,KAAcG,GACxD,OAAOC,GAA0B,M,4CAGnC,WACE,IACEO,EAIEO,KAJFP,UACAG,EAGEI,KAHFJ,mBACAC,EAEEG,KAFFH,gCACAhB,EACEmB,KADFnB,MAEF,OACE,mCACE,sBAAKM,UAAWC,IAAOa,UAAvB,UACE,uDACA,eAAC,EAAD,WACE,cAAC,EAAD,CAAiB/B,YAAauB,IAC7BG,IACC,cAAC,EAAD,CACEf,MAAOA,EACPI,MAAOW,IACPV,WAAYW,MAGd,cAAC,EAAD,CAAcN,QAAQ,kC,GA7ClBW,a,MCLlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9ac2f27c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__1FT9Y\",\"baseShell\":\"Feedback_baseShell__24Bwq\"};","import React from 'react';\r\n\r\nconst Section = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst FeedbackOptions = ({ onAddReview }) => {\r\n  return (\r\n    <ButtonGroup\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      aria-label=\"contained primary button group\"\r\n    >\r\n      <Button name=\"good\" onClick={e => onAddReview(e.currentTarget.name)}>\r\n        Good\r\n      </Button>\r\n      <Button name=\"neutral\" onClick={e => onAddReview(e.currentTarget.name)}>\r\n        Neutral\r\n      </Button>\r\n      <Button name=\"bad\" onClick={e => onAddReview(e.currentTarget.name)}>\r\n        Bad\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport styles from '../Feedback.module.css';\r\n\r\nconst Statistics = ({ state: { good, neutral, bad }, total, percentage }) => (\r\n  <div className={styles.baseShell}>\r\n    <h2>Statistics</h2>\r\n    <p>\r\n      Good: <span>{good}</span>\r\n    </p>\r\n    <p>\r\n      Neutral: <span>{neutral}</span>\r\n    </p>\r\n    <p>\r\n      Bad: <span>{bad}</span>\r\n    </p>\r\n    <p>\r\n      Total:\r\n      <span>{total}</span>\r\n    </p>\r\n    <p>\r\n      Positive feedback: <span>{percentage}%</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ massage }) => <h3>{massage}</h3>;\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport styles from './components/FeedbackStatistics/Feedback.module.css';\r\n\r\n//Components\r\nimport Section from './components/FeedbackStatistics/Feedback/Section';\r\nimport FeedbackOptions from './components/FeedbackStatistics/Feedback/FeedbackOptions';\r\nimport Statistics from './components/FeedbackStatistics/Feedback/Statistick';\r\nimport Notification from './components/FeedbackStatistics/Feedback/Notification';\r\n// import FeedbackStatistics from './components/FeedbackStatistics/FeedbackStatistics';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addReview = name => {\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const percentage = Math.round((this.state.good * 100) / total);\r\n    return percentage ? percentage : '0 ';\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      addReview,\r\n      countTotalFeedback,\r\n      countPositiveFeedbackPercentage,\r\n      state,\r\n    } = this;\r\n    return (\r\n      <>\r\n        <div className={styles.container}>\r\n          <h1>Please leave feedback</h1>\r\n          <Section>\r\n            <FeedbackOptions onAddReview={addReview} />\r\n            {countTotalFeedback() ? (\r\n              <Statistics\r\n                state={state}\r\n                total={countTotalFeedback()}\r\n                percentage={countPositiveFeedbackPercentage()}\r\n              />\r\n            ) : (\r\n              <Notification massage=\"No feedback given\" />\r\n            )}\r\n          </Section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}